# Reading pref.tcl
# do some_bs_run_msim_rtl_vhdl.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Copying C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vcom -93 -work work {C:/Users/aryav/OneDrive - Indian Institute of Technology Bombay/Storage Dump/Quartus_Dada/some_bs.vhd}
# Model Technology ModelSim - Intel FPGA Edition vcom 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:34:24 on Dec 03,2023
# vcom -reportprogress 300 -93 -work work C:/Users/aryav/OneDrive - Indian Institute of Technology Bombay/Storage Dump/Quartus_Dada/some_bs.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity some_bs
# -- Compiling architecture ek_tarfa of some_bs
# End time: 11:34:24 on Dec 03,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
vsim work.some_bs
# vsim work.some_bs 
# Start time: 11:34:36 on Dec 03,2023
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading work.some_bs(ek_tarfa)
add wave -position end  sim:/some_bs/output
add wave -position end  sim:/some_bs/tail
add wave -position end  sim:/some_bs/clk
force -freeze sim:/some_bs/clk 1 0, 0 {50 ps} -r 100
restart
force -freeze sim:/some_bs/clk 0 0, 1 {50 ps} -r 100
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
# End time: 11:35:33 on Dec 03,2023, Elapsed time: 0:00:57
# Errors: 0, Warnings: 0
